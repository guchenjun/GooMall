<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.milen.mapper.GoodsMapper">
    <insert id="insertSPU" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO gm_spu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            spu_name, spu_image, category1_id, category2_id, brand_id, shop_id,is_on,
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{spuName}, #{spuImage}, #{category1Id}, #{category2Id}, #{brandId}, #{shopId},0,
            <if test="description != null">
                #{description},
            </if>
        </trim>
    </insert>

    <insert id="insertSKU" parameterType="com.milen.model.dto.SKUDTO">
        INSERT INTO gm_sku
        (spu_id, sku_name, stock, is_on, price, gmt_create, gmt_modified)
        VALUES
        (#{spuId}, #{skuDTO.skuName}, #{skuDTO.skuStock}, 0, #{skuDTO.skuPrice}, #{date}, #{date})
        <selectKey resultType="Long" order="AFTER" keyProperty="skuDTO.id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <insert id="insertSKUImage">
        INSERT INTO gm_sku_image
        (image, sku_id, gmt_create, gmt_modified)
        VALUES
        <foreach collection="skuImages" item="image" open="(" close=")" separator=",">
            #{image}, #{skuId}, #{date}, #{date}
        </foreach>
    </insert>

    <insert id="insertSKUAttrValue">
        INSERT INTO gm_sku_attr_value
        (spu_id, sku_id, attr_id, attr_value_id, gmt_create, gmt_modified)
        VALUES
        <foreach collection="attrAndAttrValueDTOList" item="attrAndAttrValueDTO" separator=",">
            (#{spuId}, #{skuId}, #{attrAndAttrValueDTO.attrId}, #{attrAndAttrValueDTO.attrValueId}, #{date}, #{date})
        </foreach>
    </insert>

    <insert id="insertGoodsComment">
        INSERT INTO gm_comment
        (user_id, spu_id, content, gmt_create, gmt_modified)
        VALUES
        (#{userId}, #{spuId}, #{content}, #{date}, #{date})
    </insert>

    <update id="updateSkuStockBySkuId">
        UPDATE gm_sku SET stock = stock - #{amount} WHERE id = #{skuId} AND (stock - #{amount}) >= 0
    </update>

    <update id="updateGoodsStatusOnById">
        UPDATE gm_spu SET is_on = 1 WHERE id = #{spuId}
    </update>

    <update id="updateGoodsStatusOffById">
        UPDATE gm_spu SET is_on = 0 WHERE id = #{spuId}
    </update>

    <update id="updateGoodsGmtModified">
        UPDATE gm_spu SET gmt_modified = #{date} WHERE id = #{spuId}
    </update>

    <select id="listCategory1" resultType="com.milen.model.po.Category1">
        SELECT id, category1_name FROM gm_category1
    </select>

    <select id="listCategory2" resultType="com.milen.model.po.Category2">
        SELECT id, category2_name, category1_id FROM gm_category2
    </select>

    <select id="listBrandAndCategory2" resultType="com.milen.model.po.BrandCategory">
        SELECT id, brand_id, category2_id FROM gm_brand_category
    </select>

    <select id="listBrand" resultType="com.milen.model.po.Brand">
        SELECT id, brand_name FROM gm_brand
    </select>

    <select id="getSPUById" resultType="com.milen.model.po.SPU">
        SELECT * FROM gm_spu WHERE id = #{spuId}
    </select>

    <select id="getCategory2IdBySPUId" resultType="java.lang.Long">
        SELECT category2_id FROM gm_spu WHERE id = #{spuId}
    </select>

    <select id="listSPUByGoodsName" resultType="com.milen.model.po.SPU">
        SELECT * FROM gm_spu WHERE is_on = 1 AND spu_name LIKE CONCAT('%',#{goodsName},'%')
    </select>

    <select id="listSPUByCategory1Id" resultType="com.milen.model.po.SPU">
        SELECT * FROM gm_spu WHERE is_on = 1 AND category1_id = #{id}
    </select>

    <select id="listSPUByCategory2Id" resultType="com.milen.model.po.SPU">
        SELECT * FROM gm_spu WHERE is_on = 1 AND category2_id = #{id}
    </select>

    <select id="listSKUBySPUId" resultType="com.milen.model.po.SKU">
        SELECT * FROM gm_sku WHERE spu_id = #{spuId}
    </select>

    <select id="listSKUImagesBySKUId" resultType="java.lang.String">
        SELECT image FROM gm_sku_image WHERE sku_id = #{id}
    </select>

    <select id="getFirstSKUBySPUId" resultType="java.math.BigDecimal">
        SELECT price FROM gm_sku WHERE spu_id = #{id} LIMIT 1
    </select>

    <select id="getSkuStockBySkuId" resultType="java.lang.Long">
        SELECT stock FROM gm_sku WHERE id = #{skuId}
    </select>
    <select id="getGoodsStatusById" resultType="java.lang.Long">
        SELECT is_on FROM gm_spu WHERE id = #{spuId}
    </select>

    <select id="getShopBySpuId" resultType="com.milen.model.po.Shop">
        SELECT shop_name, shop_score FROM gm_shop WHERE id =
        (SELECT shop_id FROM gm_spu WHERE id = #{spuId})
    </select>

    <select id="listCommentsBySpuId" resultType="com.milen.model.po.Comment">
        SELECT * FROM gm_comment WHERE spu_id = #{spuId}
    </select>

    <select id="getSpuImageById" resultType="java.lang.String">
        SELECT spu_image FROM gm_spu WHERE id = #{spuId} LIMIT 1
    </select>


</mapper>