<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.milen"/>

    <mvc:annotation-driven/>

    <!--<mvc:default-servlet-handler/>-->

    <!-- 对静态资源的访问 -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!--配置Thymeleaf模板引擎-->
    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".html"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="order" value="1"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 最大内存大小 -->
        <property name="maxInMemorySize" value="10240"/>
        <!-- 最大文件大小，设置为10M，如果-1则不限制 -->
        <property name="maxUploadSize" value="10485760"/>
    </bean>

    <!--创建一个Spring Bean的名称springSessionRepositoryFilter实现过滤器。
    筛选器负责将HttpSession实现替换为Spring会话支持。在这个实例中，Spring会话得到了Redis的支持。-->
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>
    <!--创建了一个RedisConnectionFactory，它将Spring会话连接到Redis服务器。我们配置连接到默认端口(6379)上的本地主机！-->
    <bean class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory"/>


    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!--        登录拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/member/**"/>
            <mvc:mapping path="/seller/**"/>
            <bean class="com.milen.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <!--        后台校验-->
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <mvc:exclude-mapping path="/admin/login"/>
            <bean class="com.milen.interceptor.AdminInterceptor"/>
        </mvc:interceptor>
        <!--        卖家工作台位置-->
        <mvc:interceptor>
            <mvc:mapping path="/seller/release/**"/>
            <mvc:mapping path="/seller/manage/**"/>
            <mvc:mapping path="/seller/order/**"/>
            <bean class="com.milen.interceptor.SellerInterceptor"/>
        </mvc:interceptor>
        <!--        用户中心位置-->
        <mvc:interceptor>
            <mvc:mapping path="/member/info/**"/>
            <mvc:mapping path="/member/order/**"/>
            <mvc:mapping path="/member/cart/**"/>
            <mvc:mapping path="/member/favorites/**"/>
            <bean class="com.milen.interceptor.MemberInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>